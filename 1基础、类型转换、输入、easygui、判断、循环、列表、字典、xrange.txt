1. print 10*10
    print "hello world"*10
    print "hello "+"world!",    #print后面加一个逗号的意思是打印完这一行之后不要调到下一行
        逗号会自动加入一个空格
    print "hello",a,"nihao"     #中间会自动加空格

    while a>b and b<0:
        if a==100:
            print ""
        elif a==101:
            print ""
        else:
            print ""

    import random
    a=random.randint(1,100)
    b=input("what is the date today?")

2.单引号和双引号通用
    跨多行的字符串：
        print """dajiahao
        woshiyejiongtao"""

    作为一门动态语言，python有个特点：
        对一个变量第二次赋值的时候，并不是改变其中的内容，而是在内存中创建了一个新的内容，然后把原来那个名字弄给他。于是就可以这样：
            a="hello"
            a=100       
    
    求幂：
        a=10**2     #10的平方
        b=10**2.5   #也是可以的
    
    注释：#单行注释
        '''多行注释'''
    
    科学计数法
        a=1.923e-23

2.类型转换函数
    int()  从float或字符串转过来，非常方便。（由float转int是直接舍掉小数部分！！）
    float()
    str()
        注意：这里要小括号，因为是函数。而print已经是python的关键字了。
        这里的类型转换，实际上也是创建一个全新的数据。
        要从"123.456"转成int，要int(float("123.456"))
    type()  获得数据类型

3.输入
    name=raw_input("enter your name")
    读入的是字符串，input()读入的是一个数，但是新版本的python将不再支持，所以就用raw_input()然后再转成其他数据类型

    从互联网获取一个文件输入
        import urllib
        file=urllib.urlopen("http://.......txt")
        message=file.read()
        print message

4.GUI（图形用户界面）
    使用easygui模块
        import easygui
        easygui.msgbox("hello!")
    easygui会返回用户的响应，比如按下ok按钮会返回'OK'，可以：
        （注意，要考虑用户啥都没输入的情况）
        user_response=easygui.msgbox()

    flavor=easygui.buttonbox("Choose a flavor:",choices=["vanilla","chocolate","strawberry"])
    flavor=easygui.choicebox("Choose a flavor:",choices=["vanilla","chocolate","strawberry"])
    flavor=easygui.enterbox("Enter your favorite flavor:")          #得到的是字符串
        easygui.enterbox("enter your name",default="yejiongtao")    #默认值
    number=easygui.integerbox("Enter a number",upperbound=12,lowerbound=0)

    交互界面中输入help()可以获取帮助
    
5.判断
    if 6<number<10:     #居然可以这样！
    if not(number>=10): #记得加括号
    if not(a in A):
    if a not in A:

6.循环
for循环：计数循环
    for looper in [1,2,3,4,5]:      #列表
    for looper in range(1,6):       #注意！是在6之前结束！不包括6！
    for looper in range(5):         #looper从0到4
    for looper in "hi there":       #looper逐一取其中的字符，字符串本身就是一个字符列表
    for looper in range(1,10,2):    #步长为2
    for looper in range(10,0,-1):   #反向计数
        print looper
        time.sleep(1)               #注意单位是秒！
                                    #要import time
    for superHero in ['superman','captain America','spiderman']：
                                    #其他类型的列表也是可以的

while循环：条件循环
    也有break和continue

    行连接符：\
        表示是同一行。
    或者在表达式中用括号把几行都括起来，也行。

7.列表
    myList=[6,10.1,'hello',[1,2]]   #列表中元素可以是不同类型的
    myList[0]
    myList[1:4]     #获得一个子列表，包括序号1、2、3的三个元素。（这个子列表是一个副本，修改不会影响原先的列表）
    myList[:4]      #从列表开始到3
    myList[2:]      #从2到列表结束
    myList[:]       #整个列表的副本
增加元素：
    myList.append("hello")  #在列表末尾增加元素
    myList.extend([1,2])    #在列表末尾增加多个元素
    myList.insert(1,'2')    #在指定位置增加元素
删除元素：
    myList.remove('a')      #删除选中元素
    del myList[1]           #使用索引删除元素
    lastElement=myList.pop()    #弹出末尾元素
    second=myList.pop(1)    #根据索引弹出元素
搜索列表：
    if 'd' in myList:
        print myList.index('d')
    for looper in myList:
        print looper
列表排序：（下面这两个都是直接在原来的列表上操作）
    myList.sort()               #会按字母顺序排列字符串，按大小排列数字
    myList.reverse()            #逆置
    myList.sort(reverse=True)   #逆序排列
    yourList=sorted(myList)     #这个就不一样，是创建了原列表的一个有序副本。

注意：  yourList=myList         #实际上只是一个列表的两个名称而已，没有创建副本！
        yourList=myList[:]      #这样才有创建副本！

注意：在python中，数字和字符串是不可改变的，列表是可以改变的
    元组是不可变的列表：
        my_tuple=('a','b','c')  #不可排序、增加、删除、修改、用下标取值

8.字典（即键值可以自己设定的列表）
    dict={'ob1':'computer', 'ob2':'mouse', 'ob3':'printer'}
        key可以是整型或者字符串，value是任意类型
        key是唯一的，value可以改变，即重复赋值只认最后一次的

    D.get(key, 0)       #同dict[key]，多了个没有则返回缺省值，0。[]没有则抛异常
    D.has_key(key)      #有该键返回TRUE，否则FALSE
    D.keys()            #返回字典键的列表
    D.values()
    D.items()

    D.update(dict2)     #增加合并字典
    D.popitem()         #得到一个pair，并从字典中删除它。已空则抛异常
    D.clear()           #清空字典，同del dict
    D.copy()            #拷贝字典
    D.cmp(dict1,dict2)  #比较字典，(优先级为元素个数、键大小、键值大小)
                        #第一个大返回1，小返回-1，一样返回0
                
    dictionary的复制
    dict1 = dict        #别名
    dict2=dict.copy()   #克隆，即另一个拷贝。

9.xrange与range的区别
    range直接产生一个列表，xrange产生的是一个生成器。
    for i in range(5) 和 for i in xrange(5) 的效果是一样的，但是xrange快一点。
    因此，用在循环的时候，就都用xrange吧
